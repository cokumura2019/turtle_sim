// Generated by gencpp from file turtle_driver/square.msg
// DO NOT EDIT!


#ifndef TURTLE_DRIVER_MESSAGE_SQUARE_H
#define TURTLE_DRIVER_MESSAGE_SQUARE_H

#include <ros/service_traits.h>


#include <turtle_driver/squareRequest.h>
#include <turtle_driver/squareResponse.h>


namespace turtle_driver
{

struct square
{

typedef squareRequest Request;
typedef squareResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct square
} // namespace turtle_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::turtle_driver::square > {
  static const char* value()
  {
    return "c14d551333fa66347a7669f2d8af65f7";
  }

  static const char* value(const ::turtle_driver::square&) { return value(); }
};

template<>
struct DataType< ::turtle_driver::square > {
  static const char* value()
  {
    return "turtle_driver/square";
  }

  static const char* value(const ::turtle_driver::square&) { return value(); }
};


// service_traits::MD5Sum< ::turtle_driver::squareRequest> should match
// service_traits::MD5Sum< ::turtle_driver::square >
template<>
struct MD5Sum< ::turtle_driver::squareRequest>
{
  static const char* value()
  {
    return MD5Sum< ::turtle_driver::square >::value();
  }
  static const char* value(const ::turtle_driver::squareRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtle_driver::squareRequest> should match
// service_traits::DataType< ::turtle_driver::square >
template<>
struct DataType< ::turtle_driver::squareRequest>
{
  static const char* value()
  {
    return DataType< ::turtle_driver::square >::value();
  }
  static const char* value(const ::turtle_driver::squareRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::turtle_driver::squareResponse> should match
// service_traits::MD5Sum< ::turtle_driver::square >
template<>
struct MD5Sum< ::turtle_driver::squareResponse>
{
  static const char* value()
  {
    return MD5Sum< ::turtle_driver::square >::value();
  }
  static const char* value(const ::turtle_driver::squareResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtle_driver::squareResponse> should match
// service_traits::DataType< ::turtle_driver::square >
template<>
struct DataType< ::turtle_driver::squareResponse>
{
  static const char* value()
  {
    return DataType< ::turtle_driver::square >::value();
  }
  static const char* value(const ::turtle_driver::squareResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TURTLE_DRIVER_MESSAGE_SQUARE_H
