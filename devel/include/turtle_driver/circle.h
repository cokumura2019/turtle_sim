// Generated by gencpp from file turtle_driver/circle.msg
// DO NOT EDIT!


#ifndef TURTLE_DRIVER_MESSAGE_CIRCLE_H
#define TURTLE_DRIVER_MESSAGE_CIRCLE_H

#include <ros/service_traits.h>


#include <turtle_driver/circleRequest.h>
#include <turtle_driver/circleResponse.h>


namespace turtle_driver
{

struct circle
{

typedef circleRequest Request;
typedef circleResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct circle
} // namespace turtle_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::turtle_driver::circle > {
  static const char* value()
  {
    return "8440676eb34de7b6e7477a0986292872";
  }

  static const char* value(const ::turtle_driver::circle&) { return value(); }
};

template<>
struct DataType< ::turtle_driver::circle > {
  static const char* value()
  {
    return "turtle_driver/circle";
  }

  static const char* value(const ::turtle_driver::circle&) { return value(); }
};


// service_traits::MD5Sum< ::turtle_driver::circleRequest> should match
// service_traits::MD5Sum< ::turtle_driver::circle >
template<>
struct MD5Sum< ::turtle_driver::circleRequest>
{
  static const char* value()
  {
    return MD5Sum< ::turtle_driver::circle >::value();
  }
  static const char* value(const ::turtle_driver::circleRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtle_driver::circleRequest> should match
// service_traits::DataType< ::turtle_driver::circle >
template<>
struct DataType< ::turtle_driver::circleRequest>
{
  static const char* value()
  {
    return DataType< ::turtle_driver::circle >::value();
  }
  static const char* value(const ::turtle_driver::circleRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::turtle_driver::circleResponse> should match
// service_traits::MD5Sum< ::turtle_driver::circle >
template<>
struct MD5Sum< ::turtle_driver::circleResponse>
{
  static const char* value()
  {
    return MD5Sum< ::turtle_driver::circle >::value();
  }
  static const char* value(const ::turtle_driver::circleResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtle_driver::circleResponse> should match
// service_traits::DataType< ::turtle_driver::circle >
template<>
struct DataType< ::turtle_driver::circleResponse>
{
  static const char* value()
  {
    return DataType< ::turtle_driver::circle >::value();
  }
  static const char* value(const ::turtle_driver::circleResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TURTLE_DRIVER_MESSAGE_CIRCLE_H
